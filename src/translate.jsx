import useGPT from "./api/gpt";
import { Form } from "@raycast/api";
import { Storage } from "./api/storage";
import { useEffect, useState } from "react";

const languages = [
  ["ðŸ‡¬ðŸ‡§ English", "English"],
  ["ðŸ‡«ðŸ‡· French", "French"],
  ["ðŸ‡¨ðŸ‡³ Chinese", "Chinese"],
  ["ðŸ‡®ðŸ‡¹ Italian", "Italian"],
  ["ðŸ‡©ðŸ‡ª German", "German"],
  ["ðŸ‡ªðŸ‡¸ Spanish", "Spanish"],
  ["ðŸ‡µðŸ‡¹ Portuguese", "Portuguese"],
  ["ðŸ‡·ðŸ‡º Russian", "Russian"],
  ["ðŸ‡»ðŸ‡³ Vietnamese", "Vietnamese"],
  ["ðŸ‡®ðŸ‡³ Hindi", "Hindi"],
  ["ðŸ‡¦ðŸ‡ª Arabic", "Arabic"],
  ["ðŸ‡¦ðŸ‡± Albanian", "Albanian"],
  ["ðŸ‡ªðŸ‡¹ Amharic", "Amharic"],
  ["ðŸ‡¦ðŸ‡² Armenian", "Armenian"],
  ["ðŸ‡§ðŸ‡© Bengali", "Bengali"],
  ["ðŸ‡§ðŸ‡¦ Bosnian", "Bosnian"],
  ["ðŸ‡§ðŸ‡¬ Bulgarian", "Bulgarian"],
  ["ðŸ‡²ðŸ‡² Burmese", "Burmese"],
  ["ðŸ‡ªðŸ‡¸ Catalan", "Catalan"],
  ["ðŸ‡­ðŸ‡· Croatian", "Croatian"],
  ["ðŸ‡¨ðŸ‡¿ Czech", "Czech"],
  ["ðŸ‡©ðŸ‡° Danish", "Danish"],
  ["ðŸ‡³ðŸ‡± Dutch", "Dutch"],
  ["ðŸ‡ªðŸ‡ª Estonian", "Estonian"],
  ["ðŸ‡«ðŸ‡® Finnish", "Finnish"],
  ["ðŸ‡¬ðŸ‡ª Georgian", "Georgian"],
  ["ðŸ‡¬ðŸ‡· Greek", "Greek"],
  ["ðŸ‡®ðŸ‡³ Gujarati", "Gujarati"],
  ["ðŸ‡­ðŸ‡º Hungarian", "Hungarian"],
  ["ðŸ‡®ðŸ‡¸ Icelandic", "Icelandic"],
  ["ðŸ‡®ðŸ‡© Indonesian", "Indonesian"],
  ["ðŸ‡¯ðŸ‡µ Japanese", "Japanese"],
  ["ðŸ‡®ðŸ‡³ Kannada", "Kannada"],
  ["ðŸ‡°ðŸ‡¿ Kazakh", "Kazakh"],
  ["ðŸ‡°ðŸ‡· Korean", "Korean"],
  ["ðŸ‡±ðŸ‡» Latvian", "Latvian"],
  ["ðŸ‡±ðŸ‡¹ Lithuanian", "Lithuanian"],
  ["ðŸ‡²ðŸ‡° Macedonian", "Macedonian"],
  ["ðŸ‡²ðŸ‡¾ Malay", "Malay"],
  ["ðŸ‡®ðŸ‡³ Malayalam", "Malayalam"],
  ["ðŸ‡®ðŸ‡³ Marathi", "Marathi"],
  ["ðŸ‡²ðŸ‡³ Mongolian", "Mongolian"],
  ["ðŸ‡³ðŸ‡´ Norwegian", "Norwegian"],
  ["ðŸ‡®ðŸ‡· Persian", "Persian"],
  ["ðŸ‡µðŸ‡± Polish", "Polish"],
  ["ðŸ‡µðŸ‡° Punjabi", "Punjabi"],
  ["ðŸ‡·ðŸ‡´ Romanian", "Romanian"],
  ["ðŸ‡·ðŸ‡¸ Serbian", "Serbian"],
  ["ðŸ‡¸ðŸ‡° Slovak", "Slovak"],
  ["ðŸ‡¸ðŸ‡® Slovenian", "Slovenian"],
  ["ðŸ‡¸ðŸ‡´ Somali", "Somali"],
  ["ðŸ‡¸ðŸ‡ª Swedish", "Swedish"],
  ["ðŸ‡µðŸ‡­ Tagalog", "Tagalog"],
  ["ðŸ‡®ðŸ‡³ Tamil", "Tamil"],
  ["ðŸ‡®ðŸ‡³ Telugu", "Telugu"],
  ["ðŸ‡¹ðŸ‡­ Thai", "Thai"],
  ["ðŸ‡¹ðŸ‡· Turkish", "Turkish"],
  ["ðŸ‡ºðŸ‡¦ Ukrainian", "Ukrainian"],
  ["ðŸ‡µðŸ‡° Urdu", "Urdu"],
];

const languagesReact = languages.map(([title, value]) => (
  <Form.Dropdown.Item title={title} value={value} key={value} />
));

export default function Translate(props) {
  let [language, setLanguage] = useState("");

  useEffect(() => {
    (async () => {
      setLanguage(await Storage.read("translateLanguage", "English"));
    })();
  }, []);

  useEffect(() => {
    (async () => {
      if (!language) return;
      await Storage.write("translateLanguage", language);
    })();
  }, [language]);

  return useGPT(props, {
    useSelected: true,
    showFormText: "Text to translate",
    allowPaste: true,
    forceShowForm: true,
    allowUploadFiles: true,
    otherReactComponents: [
      <Form.Dropdown id="language" value={language} onChange={setLanguage} key="languageDropdown">
        {languagesReact}
      </Form.Dropdown>,
    ],
    processPrompt: ({ query, values }) => {
      return (
        `Translate the following text to ${values.language}. ONLY return the translated text and nothing else.` +
        `\n\n${query}`
      );
    },
  });
}
